package com.company;

public class Rational {

    private final int  numerator,denumerator;

    public Rational(int numerator, int denumerator) {

        int i=Math.abs(gcd(numerator,denumerator));

        this.numerator = numerator/i;
        this.denumerator = denumerator/i;
    }

    public int getNumerator() {
        return numerator;
    }

    public int getDenumerator() {
        return denumerator;
    }

    public Rational plus(Rational b){

        int i=lcm(this.denumerator,b.getDenumerator());

        return new Rational(this.numerator*i/this.denumerator+b.getNumerator()*i/b.getDenumerator(),i);
    }

    public Rational minus(Rational b){

        int i=lcm(this.denumerator,b.getDenumerator());

        return new Rational(this.numerator*i/this.denumerator-b.getNumerator()*i/b.getDenumerator(),i);
    }

    public Rational times(Rational b){

        return new Rational(this.numerator*b.getNumerator(),this.denumerator*b.getDenumerator());
    }
    public Rational divides(Rational b){

        return new Rational(this.numerator*b.getDenumerator(),this.denumerator*b.getNumerator());
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Rational rational = (Rational) o;

        if (numerator != rational.numerator) return false;
        return denumerator == rational.denumerator;
    }

    @Override
    public int hashCode() {
        int result = numerator;
        result = 31 * result + denumerator;
        return result;
    }


    private int gcd(int p, int q)
    {
        if (q == 0) return p;
        int r = p % q;
        return gcd(q, r);
    }
    private int lcm(int a, int b)
    {
        return a * (b / gcd(a, b));
    }

    @Override
    public String toString() {
        if(numerator==0)
            return "0";
        return
                 numerator +
                "/" + denumerator
                ;
    }
}
